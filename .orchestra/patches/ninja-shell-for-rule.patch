diff --git a/src/build.cc b/src/build.cc
index 76ff93a..d89a762 100644
--- a/src/build.cc
+++ b/src/build.cc
@@ -483,7 +483,7 @@ bool RealCommandRunner::CanRunMore() const {
 
 bool RealCommandRunner::StartCommand(Edge* edge) {
   string command = edge->EvaluateCommand();
-  Subprocess* subproc = subprocs_.Add(command, edge->use_console());
+  Subprocess* subproc = subprocs_.Add(command, edge->use_console(), edge->GetBinding("shell"));
   if (!subproc)
     return false;
   subproc_to_edge_.insert(make_pair(subproc, edge));
diff --git a/src/eval_env.cc b/src/eval_env.cc
index 796a326..dc43c5a 100644
--- a/src/eval_env.cc
+++ b/src/eval_env.cc
@@ -75,6 +75,7 @@ bool Rule::IsReservedBinding(const string& var) {
       var == "restat" ||
       var == "rspfile" ||
       var == "rspfile_content" ||
+      var == "shell" ||
       var == "msvc_deps_prefix";
 }
 
diff --git a/src/subprocess-posix.cc b/src/subprocess-posix.cc
index 8e78540..bc43c95 100644
--- a/src/subprocess-posix.cc
+++ b/src/subprocess-posix.cc
@@ -36,8 +36,8 @@ extern char** environ;
 
 using namespace std;
 
-Subprocess::Subprocess(bool use_console) : fd_(-1), pid_(-1),
-                                           use_console_(use_console) {
+Subprocess::Subprocess(bool use_console, const std::string &shell) : fd_(-1), pid_(-1),
+                                                                     use_console_(use_console), shell_(shell) {
 }
 
 Subprocess::~Subprocess() {
@@ -117,8 +117,13 @@ bool Subprocess::Start(SubprocessSet* set, const string& command) {
   if (err != 0)
     Fatal("posix_spawnattr_setflags: %s", strerror(err));
 
-  const char* spawned_args[] = { "/bin/sh", "-c", command.c_str(), NULL };
-  err = posix_spawn(&pid_, "/bin/sh", &action, &attr,
+  const char* shell = "/bin/sh";
+  if (!shell_.empty())
+    shell = shell_.c_str();
+
+  const char* spawned_args[] = { shell, "-c", command.c_str(), NULL };
+
+  err = posix_spawn(&pid_, shell, &action, &attr,
         const_cast<char**>(spawned_args), environ);
   if (err != 0)
     Fatal("posix_spawn: %s", strerror(err));
@@ -238,8 +243,8 @@ SubprocessSet::~SubprocessSet() {
     Fatal("sigprocmask: %s", strerror(errno));
 }
 
-Subprocess *SubprocessSet::Add(const string& command, bool use_console) {
-  Subprocess *subprocess = new Subprocess(use_console);
+Subprocess *SubprocessSet::Add(const string& command, bool use_console, const string &shell) {
+  Subprocess *subprocess = new Subprocess(use_console, shell);
   if (!subprocess->Start(this, command)) {
     delete subprocess;
     return 0;
diff --git a/src/subprocess-win32.cc b/src/subprocess-win32.cc
index ff3baac..be14d95 100644
--- a/src/subprocess-win32.cc
+++ b/src/subprocess-win32.cc
@@ -23,9 +23,9 @@
 
 using namespace std;
 
-Subprocess::Subprocess(bool use_console) : child_(NULL) , overlapped_(),
+Subprocess::Subprocess(bool use_console, const std::string & shell) : child_(NULL) , overlapped_(),
                                            is_reading_(false),
-                                           use_console_(use_console) {
+                                                                      use_console_(use_console), shell_(shell) {
 }
 
 Subprocess::~Subprocess() {
diff --git a/src/subprocess.h b/src/subprocess.h
index 9e3d2ee..171489e 100644
--- a/src/subprocess.h
+++ b/src/subprocess.h
@@ -51,7 +51,7 @@ struct Subprocess {
   const std::string& GetOutput() const;
 
  private:
-  Subprocess(bool use_console);
+  Subprocess(bool use_console, const std::string &shell);
   bool Start(struct SubprocessSet* set, const std::string& command);
   void OnPipeReady();
 
@@ -72,6 +72,7 @@ struct Subprocess {
   pid_t pid_;
 #endif
   bool use_console_;
+  const std::string &shell_;
 
   friend struct SubprocessSet;
 };
@@ -83,7 +84,7 @@ struct SubprocessSet {
   SubprocessSet();
   ~SubprocessSet();
 
-  Subprocess* Add(const std::string& command, bool use_console = false);
+  Subprocess* Add(const std::string& command, bool use_console = false, const std::string &shell="");
   bool DoWork();
   Subprocess* NextFinished();
   void Clear();
